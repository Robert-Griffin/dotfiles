set -g default-terminal "screen-256color"

# Set inactive pane border to be thin and grey
setw -g pane-border-style fg=colour235,bg=default


set -g pane-border-lines "double"

bind 'P' display-popup -E "tmux -L popup -f ~/.config/tmux/minimal.conf new-session -A -s popup"


# Use a better prefix
# remap prefix to Control + a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Split windows with more logical keys
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# Remap movement keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | is_vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | is_vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | is_vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | is_vim && tmux send-keys C-l) || tmux select-pane -R"
 
# custom bindings
bind V source-file ~/.tmux.conf.d/vim.conf # open new vim window
bind r source-file ~/.tmux.conf # reload tmux config

# VIM
set-window-option -g mode-keys vi

# mouse
set -g mouse on
set -g mouse-resize-pane on

# Use system clipboard on macOS
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
